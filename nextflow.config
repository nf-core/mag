/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/mag Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                = null
    assembly_input                       = null
    single_end                           = false

    // short read preprocessing options
    skip_clipping                        = false
    clip_tool                            = 'fastp'
    save_clipped_reads                   = false
    reads_minlength                      = 15
    fastp_save_trimmed_fail              = false
    fastp_qualified_quality              = 15
    fastp_cut_mean_quality               = 15
    adapterremoval_minquality            = 2
    adapterremoval_adapter1              = 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG'
    adapterremoval_adapter2              = 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'
    adapterremoval_trim_quality_stretch  = false
    keep_phix                            = false
    // long read preprocessing options
    longread_adaptertrimming_tool        = "porechop_abi"
    longread_filtering_tool              = "filtlong"
    // phix_reference                    = "ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/viral/Enterobacteria_phage_phiX174_sensu_lato/all_assembly_versions/GCA_002596845.1_ASM259684v1/GCA_002596845.1_ASM259684v1_genomic.fna.gz"
    phix_reference                       = "${baseDir}/assets/data/GCA_002596845.1_ASM259684v1_genomic.fna.gz"
    save_phixremoved_reads               = false
    host_fasta                           = null
    host_fasta_bowtie2index              = null
    host_genome                          = null
    host_removal_verysensitive           = false
    host_removal_save_ids                = false
    save_hostremoved_reads               = false
    bbnorm                               = false
    bbnorm_target                        = 100
    bbnorm_min                           = 5
    save_bbnorm_reads                    = false

    // binning options
    bowtie2_mode                         = null
    binning_map_mode                     = 'group'
    save_assembly_mapped_reads           = false
    skip_binning                         = false
    min_contig_size                      = 1500
    min_length_unbinned_contigs          = 1000000
    max_unbinned_contigs                 = 100
    skip_prokka                          = false
    prokka_with_compliance               = false
    prokka_compliance_centre             = null

    // assembly options
    coassemble_group                     = false
    spades_options                       = null
    megahit_options                      = null
    skip_spades                          = false
    skip_spadeshybrid                    = false
    skip_megahit                         = false
    skip_quast                           = false
    skip_prodigal                        = false

    // virus identification options
    run_virus_identification             = false
    genomad_db                           = null
    genomad_min_score                    = 0.7
    genomad_splits                       = 1

    // ancient DNA assembly validation options
    ancient_dna                          = false
    pydamage_accuracy                    = 0.5
    skip_ancient_damagecorrection        = false
    freebayes_ploidy                     = 1
    freebayes_min_basequality            = 20
    freebayes_minallelefreq              = 0.33
    bcftools_view_high_variant_quality   = 30
    bcftools_view_medium_variant_quality = 20
    bcftools_view_minimal_allelesupport  = 3

    // taxonomy options
    centrifuge_db                        = null
    kraken2_db                           = null
    skip_krona                           = false
    krona_db                             = null
    cat_db                               = null
    cat_db_generate                      = false
    cat_official_taxonomy                = false
    save_cat_db                          = false
    skip_gtdbtk                          = false
    gtdb_db                              = "https://data.gtdb.ecogenomic.org/releases/release220/220.0/auxillary_files/gtdbtk_package/full_package/gtdbtk_r220_data.tar.gz"
    gtdb_mash                            = null
    gtdbtk_min_completeness              = 50.0
    gtdbtk_max_contamination             = 10.0
    gtdbtk_min_perc_aa                   = 10
    gtdbtk_min_af                        = 0.65
    gtdbtk_pplacer_cpus                  = 1
    gtdbtk_pplacer_useram                = false

    // long read preprocessing options
    skip_adapter_trimming                = false
    keep_lambda                          = false
    longreads_min_quality                = null
    longreads_min_length                 = 1000
    longreads_keep_percent               = 90
    longreads_length_weight              = 10
    // lambda_reference                  = "ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/viral/Escherichia_virus_Lambda/all_assembly_versions/GCA_000840245.1_ViralProj14204/GCA_000840245.1_ViralProj14204_genomic.fna.gz"
    lambda_reference                     = "${baseDir}/assets/data/GCA_000840245.1_ViralProj14204_genomic.fna.gz"
    save_lambdaremoved_reads             = false
    save_porechop_reads                  = false
    save_filtered_longreads              = false

    // binning options
    skip_metabat2                   = false
    skip_maxbin2                    = false
    skip_concoct                    = false
    bin_domain_classification       = false
    bin_domain_classification_tool  = 'tiara'
    tiara_min_length                = 3000
    refine_bins_dastool             = false
    refine_bins_dastool_threshold   = 0.5
    postbinning_input               = 'raw_bins_only'
    exclude_unbins_from_postbinning = false

    // Bin QC
    skip_binqc                           = false
    binqc_tool                           = 'busco'
    busco_db                             = null
    busco_auto_lineage_prok              = false
    save_busco_db                        = false
    busco_clean                          = false
    checkm_download_url                  = "https://zenodo.org/records/7401545/files/checkm_data_2015_01_16.tar.gz"
    checkm_db                            = null
    save_checkm_data                     = false
    checkm2_db                           = null
    checkm2_db_version                   = 5571251 // corresponds to Zenodo record  ID
    save_checkm2_data                    = false
    run_gunc                             = false
    gunc_database_type                   = 'progenomes'
    gunc_db                              = null
    gunc_save_db                         = false

    // Reproducibility options
    megahit_fix_cpu_1                    = false
    spades_fix_cpus                      = -1
    spadeshybrid_fix_cpus                = -1
    metabat_rng_seed                     = 1

    // Annotation options
    skip_metaeuk                         = false
    metaeuk_mmseqs_db                    = null
    metaeuk_db                           = null
    save_mmseqs_db                       = false

    // References
    //genome                     = null // we use --host_genome instead
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = false

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test                      { includeConfig 'conf/test.config'                      }
    test_full                 { includeConfig 'conf/test_full.config'                 }
    test_host_rm              { includeConfig 'conf/test_host_rm.config'              }
    test_hybrid               { includeConfig 'conf/test_hybrid.config'               }
    test_hybrid_host_rm       { includeConfig 'conf/test_hybrid_host_rm.config'       }
    test_busco_auto           { includeConfig 'conf/test_busco_auto.config'           }
    test_ancient_dna          { includeConfig 'conf/test_ancient_dna.config'          }
    test_adapterremoval       { includeConfig 'conf/test_adapterremoval.config'       }
    test_binning_entry        { includeConfig 'conf/test_binning_entry.config'        }
    test_binrefinement        { includeConfig 'conf/test_binrefinement.config'        }
    test_no_clipping          { includeConfig 'conf/test_no_clipping.config'          }
    test_bbnorm               { includeConfig 'conf/test_bbnorm.config'               }
    test_nothing              { includeConfig 'conf/test_nothing.config'              }
    test_virus_identification { includeConfig 'conf/test_virus_identification.config' }
    test_single_end           { includeConfig 'conf/test_single_end.config'           }
    test_concoct              { includeConfig 'conf/test_concoct.config'              }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/mag custom profiles from different institutions.
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/mag.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/mag'
    author          = """Hadrien Gourlé, Daniel Straub, Sabrina Krakau, James A. Fellows Yates, Maxime Borry""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'Hadrien Gourlé',
            affiliation: 'Department of Animal Breeding and Genetics, Swedish University of Agricultural Sciences, Uppsala, Swden',
            email: '',
            github: 'HadrienG',
            contribution: ['author'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-9807-1082 '
        ],
        [
            name: 'Daniel Straub',
            affiliation: 'Quantitative Biology Center (QBiC), University of Tübingen, Tübingen, Germany',
            email: '',
            github: 'd4straub',
            contribution: ['author', 'maintainer'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0002-2553-0660 '
        ],
        [
            name: 'Sabrina Krakau',
            affiliation: 'Quantitative Biology Center (QBiC), University of Tübingen, Tübingen, Germany',
            email: '',
            github: 'skrakau',
            contribution: ['contributor'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0003-0603-7907 '
        ],
        [
            name: 'Antonia Schuster',
            affiliation: 'Quantitative Biology Center (QBiC), University of Tübingen, Tübingen, Germany',
            email: '',
            github: 'AntoniaSchuster',
            contribution: ['author'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
        [
            name: 'James A. Fellows Yates',
            affiliation: 'Department of Archaeogenetics, Max Planck Institute for Evolutionary Anthropology, Leipzig, Germany',
            email: 'jfy133@gmail.com',
            github: 'jfy133',
            contribution: ['maintainer'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-5585-6277'
        ],
        [
            name: 'Maxime Borry',
            affiliation: 'Department of Archaeogenetics, Max Planck Institute for Evolutionary Anthropology, Leipzig, Germany',
            email: '',
            github: 'maxibor',
            contribution: ['contributor'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-9140-7559'
        ],
        [
            name: 'Jim Downie',
            affiliation: 'Wellcome Sanger Institute, Hinxton, UK',
            email: '',
            github: 'prototaxites',
            contribution: ['contributor'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0002-7175-0533'
        ],
        [
            name: 'Carson Miller',
            affiliation: 'University of Washington, Seattle, USA',
            email: '0000-0002-7175-0533',
            github: 'prototaxites',
            contribution: ['contributor'], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: '0000-0001-9861-4884'
        ],
    ]
    homePage        = 'https://github.com/nf-core/mag'
    description     = """Assembly, binning and annotation of metagenomes"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.04.2'
    version         = '3.3.0dev'
    doi             = '10.1093/nargab/lqac007'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.2' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run nf-core/mag -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  nf-core/mag ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/nf-core/mag/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
