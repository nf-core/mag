nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    profile "test"

    test("Profile: test") {

        when {
            params {
                outdir = "$outputDir"
            }
        }



        then {
            def output_files = []
            new File("$outputDir").eachFileRecurse { file -> output_files << file }

            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    output_files.findAll {
                        // fastp *.json
                        // bowtie2 *.log
                        it.toString() ==~ /.*QC_shortreads.*(json|log)/ ||
                        // Centrifuge *kreport.txt, *report.txt, *results.txt
                        // kraken2 *report.txt
                        it.toString() ==~ /.*Taxonomy.*txt/ ||
                        // MEGAHIT *.contigs.fa.gz
                        // metaSPAdes *contigs.fasta.gz, *scaffolds.fasta.gz
                        it.toString() ==~ /.*Assembly.*(fa\.gz|fasta\.gz)/ ||
                        // cannot add QUAST outputs because no sample-specific prefix for report files
                        // bowtie2 *.log
                        it.toString() ==~ /.*Assembly.*QC.*bowtie2\.log/ ||
                        // Prodigal *.gff.gz, *.faa.gz, *.fna.gz, *all.txt.gz
                        // Prokka *.gff, *.err, *.faa, *.ffn, *.fna, *.fsa, *.gbk, *.tbl, *.tsv, *.txt
                        it.toString() ==~ /.*Annotation.*(\.gz|err|faa|ffn|fna|fsa|gbk|gff|tbl|tsv|txt)/ ||
                        // MaxBin2 *.fa.gz
                        // MetaBAT2 *.fa.gz
                        it.toString() ==~ /.*GenomeBinning.*fa\.gz/ ||
                        // *depth.txt.gz
                        it.toString() ==~ /.*GenomeBinning.*depths.*txt\.gz/ ||
                        // bin_depths_summary.tsv, busco_summary.tsv, quast_summary.tsv, bin_summary.tsv
                        it.toString() ==~ /.*GenomeBinning.*(bin|busco|quast|depths)_summary\.tsv/ ||
                        // BUSCO files have dates
                        it.toString() ==~ /.*GenomeBinning.*(summary\.tsv)/
                    }
                    ).match()
                }
            )
        }
    }
}
