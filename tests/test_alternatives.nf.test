nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "test_alternatives"
    profile "test_alternatives"

    test("-profile test_alternatives") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {

            // Output dir: QC_shortreads
            def stable_name_qc = getAllFilesFromDir(
                "$outputDir/QC_shortreads",
                relative: true,
                includeDir: false,
            )
            def stable_path_qc = getAllFilesFromDir(
                "$outputDir/QC_shortreads",
                ignore: ['remove_phix/*.log']
            )

            // Output dir: Assembly
            def stable_name_assembly = getAllFilesFromDir(
                "$outputDir/Assembly",
                relative: true,
                includeDir: false,
            )
            def stable_path_assembly = getAllFilesFromDir(
                "$outputDir/Assembly",
                ignore: ['MEGAHIT/*.log', 'MEGAHIT/QC/*/*.bowtie2.log']
            )

            // Output dir: GenomeBinning
            def stable_name_binning = getAllFilesFromDir(
                "$outputDir/GenomeBinning",
                relative: true,
                includeDir: false,
            )
            def stable_path_binning = getAllFilesFromDir(
                "$outputDir/GenomeBinning",
                ignore: ['**/{tiara,checkm2}_summary.tsv', 'depths/**/*-depth.txt.gz', 'QC/CheckM2/*_checkm2_report.tsv', 'QC/CheckM2/*/checkm2.log', 'QC/CheckM2/**/{DIAMOND_RESULTS.tsv,quality_report.tsv}']
            )

            // Output dir: multiqc
            def stable_name_multiqc = getAllFilesFromDir(
                "$outputDir/multiqc",
                relative: true,
                includeDir: false,
            )
            def stable_path_multiqc = getAllFilesFromDir(
                "$outputDir/multiqc",
                ignore: ['**/*.{yaml,pdf,log,svg}', '**/general_stats_table.png', 'multiqc_report.html', '**/multiqc.log', '**/multiqc_data.json', '**/*-multiqc.parquet', '**/bowtie2_pe_plot-*.png', '**/checkm2-*.png'],
            )

            assertAll(
                { assert workflow.success },
                { assert snapshot(
                        // Number of successful tasks
                        workflow.trace.succeeded().size(),
                        // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                        removeNextflowVersion("$outputDir/pipeline_info/nf_core_mag_software_mqc_versions.yml"),
                    ).match()
                },
                { assert snapshot(stable_name_qc,       stable_path_qc      ).match('qc') },
                { assert snapshot(stable_name_assembly, stable_path_assembly).match('assembly') },
                { assert snapshot(stable_name_binning,  stable_path_binning ).match('binning') },
                { assert snapshot(stable_name_multiqc,  stable_path_multiqc ).match('multiqc') },
            )
        }
    }
}
