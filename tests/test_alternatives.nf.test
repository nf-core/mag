nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "test_alternatives"
    profile "test_alternatives"

    test("-profile test_alternatives") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {

            // Output dir: QC_shortreads
            def stable_name_qc = getAllFilesFromDir(
                params.outdir, include: ['QC_shortreads/**'], relative: true, includeDir: false
            )
            def stable_path_qc = getAllFilesFromDir(
                params.outdir, include: ['QC_shortreads/**'], ignoreFile: 'tests/.nftignore'
            )

            // Output dir: Assembly
            def stable_name_assembly = getAllFilesFromDir(
                params.outdir, include: ['Assembly/**'], relative: true, includeDir: false
            )
            def stable_path_assembly = getAllFilesFromDir(
                params.outdir, include: ['Assembly/**'], ignoreFile: 'tests/.nftignore'
            )

            // Output dir: GenomeBinning
            def stable_name_binning = getAllFilesFromDir(
                params.outdir, include: ['GenomeBinning/**'], relative: true, includeDir: false
            )
            def stable_path_binning = getAllFilesFromDir(
                params.outdir, include: ['GenomeBinning/**'], ignoreFile: 'tests/.nftignore'
            )

            // Output dir: multiqc
            def stable_name_multiqc = getAllFilesFromDir(
                params.outdir, include: ['multiqc/**'], relative: true, includeDir: false
            )
            def stable_path_multiqc = getAllFilesFromDir(
                params.outdir, include: ['multiqc/**'], ignoreFile: 'tests/.nftignore'
            )

            assertAll(
                { assert workflow.success },
                { assert snapshot(
                        // Number of successful tasks
                        workflow.trace.succeeded().size(),
                        // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                        removeNextflowVersion("${outputDir}/pipeline_info/nf_core_mag_software_mqc_versions.yml"),
                    ).match()
                },
                { assert snapshot(stable_name_qc,       stable_path_qc      ).match('qc') },
                { assert snapshot(stable_name_assembly, stable_path_assembly).match('assembly') },
                { assert snapshot(stable_name_binning,  stable_path_binning ).match('binning') },
                { assert snapshot(stable_name_multiqc,  stable_path_multiqc ).match('multiqc') },
            )
        }
    }
}
