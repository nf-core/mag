nextflow_pipeline {

    name "Test pipeline with test_hybrid profile"
    script "../main.nf"
    tag "pipeline"
    tag "test_hybrid"
    profile "test_hybrid"

    test("-profile hybrid") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {

            // Output directory: all
            def stable_names = getAllFilesFromDir(
                params.outdir, include: ['multiqc/**'], relative: true, includeDir: false
            )

            // Stable contents: Annotation
            def stable_contents_annotation = getAllFilesFromDir(
                params.outdir, include: ['Annotation/**'], ignoreFile: 'tests/.nftignore'
            )

            // Stable contents: Assembly
            def stable_contents_assembly = getAllFilesFromDir(
                params.outdir, include: ['Assembly/**'], ignoreFile: 'tests/.nftignore'
            )

            // Stable contents: GenomeBinning
            def stable_contents_genomebinning = getAllFilesFromDir(
                params.outdir, include: ['GenomeBinning/**'], ignoreFile: 'tests/.nftignore'
            )

            // Stable contents: MultiQC
            def stable_contents_multiqc = getAllFilesFromDir(
                params.outdir, include: ['multiqc/**'], ignoreFile: 'tests/.nftignore'
            )

            // Stable contents: QC Long Reads
            def stable_contents_qclongreads = getAllFilesFromDir(
                params.outdir, include: ['QC_longreads/**'], ignoreFile: 'tests/.nftignore'
            )

            // Stable contents: QC Short Reads
            def stable_contents_qcshortreads = getAllFilesFromDir(
                params.outdir, include: ['QC_shortreads/**'], ignoreFile: 'tests/.nftignore'
            )

            assert workflow.success
            assertAll(
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nf_core_mag_software_mqc_versions.yml"),
                    stable_names,
                ).match('all') },
                { assert snapshot(stable_contents_annotation).match('Annotation') },
                { assert snapshot(stable_contents_assembly).match('Assembly') },
                { assert snapshot(stable_contents_genomebinning).match('GenomeBinning') },
                { assert snapshot(stable_contents_multiqc).match('multiqc') },
                { assert snapshot(stable_contents_qclongreads).match('QC_longreads') },
                { assert snapshot(stable_contents_qcshortreads).match('QC_shortreads') },
            )
        }
    }
}
